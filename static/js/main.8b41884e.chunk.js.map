{"version":3,"sources":["components/Navbar.js","components/Form.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","toggleMode","aria-checked","htmlFor","placeholder","Form","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","backgroundColor","onChange","event","target","value","rows","newText","toUpperCase","showAlert","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","count","split","forEach","element","length","handleCountWordLength","defaultProps","about","num","Alert","alert","data-bs-dismiss","setTimeout","App","setMode","_useState3","_useState4","switchText","setswitchText","_useState5","_useState6","setAlert","message","document","body","toggleMode2","console","log","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"mMAGe,SAASA,EAAOC,GAC7B,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAS,kCAAAC,OAAoCN,EAAMO,KAAI,QAAAD,OAAON,EAAMO,OACvEN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,eAAeG,KAAK,KAAI,UAC3BR,EAAMS,OAEhBR,EAAAC,EAAAC,cAAA,UACEE,UAAU,iBACVK,KAAK,SACLC,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBAEXd,EAAAC,EAAAC,cAAA,QAAME,UAAU,yBAElBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BAA2BW,GAAG,0BAC3Cf,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mCACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAkBY,eAAa,OAAOT,KAAK,KAAI,SAI9DP,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAgBG,KAAK,KAAI,UAIxCP,EAAAC,EAAAC,cAAA,MAAIE,UAAU,qBACZJ,EAAAC,EAAAC,cAAA,KACEE,UAAU,gCACVG,KAAK,IACLU,KAAK,SACLP,iBAAe,WACfG,gBAAc,SACf,YAGDb,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBACZJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAgBG,KAAK,KAAI,WAIxCP,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAgBG,KAAK,KAAI,mBAIxCP,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,sBAEhBJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gBAAgBG,KAAK,KAAI,0BAM5CP,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YACZJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,oBAAoBG,KAAK,KAAI,cAG9CP,EAAAC,EAAAC,cAAA,OAAKE,UAAS,+BAAAC,OAAgD,SAAfN,EAAMO,KAAkB,QAAyB,UAAfP,EAAMO,KAAmB,UAA0B,SAAfP,EAAMO,KAAkB,UAAY,SACvJN,EAAAC,EAAAC,cAAA,SAAOE,UAAU,mBAAmBc,QAASnB,EAAMoB,WAAYV,KAAK,WAAWQ,KAAK,SAASG,eAAa,QAAQL,GAAG,2BACrHf,EAAAC,EAAAC,cAAA,SAAOE,UAAU,mBAAmBiB,QAAQ,0BAAyB,gBAEvErB,EAAAC,EAAAC,cAAA,OAAKE,UAAS,+BAAAC,OAAgD,SAAfN,EAAMO,KAAkB,QAAU,SAC/EN,EAAAC,EAAAC,cAAA,SAAOE,UAAU,mBAAmBc,QAASnB,EAAMoB,WAAYV,KAAK,WAAWQ,KAAK,SAASG,eAAa,QAAQL,GAAG,2BACrHf,EAAAC,EAAAC,cAAA,SAAOE,UAAU,mBAAmBiB,QAAQ,0BAAyB,gBAEvErB,EAAAC,EAAAC,cAAA,QAAME,UAAU,SAASa,KAAK,UAC5BjB,EAAAC,EAAAC,cAAA,SACEE,UAAU,oBACVK,KAAK,SACLa,YAAY,SACZR,aAAW,WAEbd,EAAAC,EAAAC,cAAA,UAAQE,UAAU,0BAA0BK,KAAK,UAAS,eClFzD,SAASc,EAAKxB,GACzB,IA2BEyB,EAEsBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA7BK,EAAIH,EAAA,GAAEI,EAAOJ,EAAA,GAGpB,OACI1B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAY2B,MAAQ,CAACC,MAAqB,UAAfjC,EAAMO,KAAmB,OAAQ,UACvEN,EAAAC,EAAAC,cAAA,UAAMH,EAAMkC,QAAQ,KAEpBjC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAa2B,MAAQ,CAACG,gBAA+B,UAAfnC,EAAMO,KAAmB,QAAS,SACnFN,EAAAC,EAAAC,cAAA,YAAUE,UAAU,eAAeW,GAAG,8BAA8BgB,MAAQ,CAACG,gBAA+B,UAAfnC,EAAMO,KAAmB,QAAS,OAC/H0B,MAAqB,UAAfjC,EAAMO,KAAmB,OAAQ,SAAU6B,SAxBtC,SAACC,GACpBN,EAAQM,EAAMC,OAAOC,QAwBTC,KAAK,OAIbvC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,uBAAuBc,QA5ClB,WAC3B,IAAIsB,EAAUX,EAAKY,cACnBX,EAAQU,GACRzC,EAAM2C,UAAU,yBAA0B,aAyCoC,wBAG1E1C,EAAAC,EAAAC,cAAA,UAAQE,UAAU,4BAA4Bc,QA1CvB,WAC3B,IAAIsB,EAAUX,EAAKc,cACnBb,EAAQU,GACRzC,EAAM2C,UAAU,yBAA0B,aAuCyC,wBAG/E1C,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASS,QAxChB,WACV,IAAI0B,EAAM,IAAIC,yBACdD,EAAIf,KAAOA,EACXiB,OAAOC,gBAAgBC,MAAMJ,IAqCaxC,UAAU,6BAA4B,UAIhFJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiB2B,MAAQ,CAACC,MAAqB,UAAfjC,EAAMO,KAAmB,OAAQ,UAE5EN,EAAAC,EAAAC,cAAA,UAAI,YACJF,EAAAC,EAAAC,cAAA,SAvCsB,WAC1B,IAAI+C,EAAQ,EAOZ,OANcpB,EAAKqB,MAAM,KACjBC,QAAQ,SAAAC,GACTA,EAAQC,OAAS,IAChBJ,GAAgB,KAGjBA,EA+BCK,GAAwB,YAAUzB,EAAKwB,OAAO,SAClDrD,EAAAC,EAAAC,cAAA,SAA6B,KAAzB2B,EAAKqB,MAAM,KAAKG,OAAe,iBACnCrD,EAAAC,EAAAC,cAAA,UAAI,aACJF,EAAAC,EAAAC,cAAA,SAAI2B,KDoChB/B,EAAOyD,aAAe,CACpB/C,MAAO,gBACPgD,MAAO,gBACPC,IAAK,QEnFQC,MAjBf,SAAe3D,GAQX,OACIA,EAAM4D,OAAS3D,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,OAAKE,UAAS,eAAAC,OAAiBN,EAAM4D,MAAMlD,KAAI,gCAAgCQ,KAAK,SACxGjB,EAAAC,EAAAC,cAAA,cAASH,EAAM4D,MAAMlD,MAAc,MAAGT,EAAAC,EAAAC,cAAA,cAASH,EAAM4D,MAAMf,KAC3D5C,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASL,UAAU,YAAYwD,kBAAgB,QAAQ9C,aAAW,QAAQI,QATxE,WACf2C,WAAW,WACT9D,EAAM2C,aAEL,WCoEIoB,MAnEf,WAAe,IAAAtC,EACUC,mBAAS,SAAQC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAlClB,EAAIoB,EAAA,GAAEqC,EAAOrC,EAAA,GAAAsC,EACgBvC,mBAAS,QAAOwC,EAAAtC,OAAAC,EAAA,EAAAD,CAAAqC,EAAA,GAA7CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAAAG,EACL3C,mBAAS,MAAK4C,EAAA1C,OAAAC,EAAA,EAAAD,CAAAyC,EAAA,GAAjCT,EAAKU,EAAA,GAAEC,EAAQD,EAAA,GAEhB3B,EAAY,SAAC6B,EAAS9D,GAExB6D,EADY,MAAXC,EACQ,KAGA,CACP3B,IAAM2B,EACN9D,KAAOA,KAmCb,OACET,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAEEH,EAAAC,EAAAC,cAACJ,EAAM,CAACU,MAAM,aAAaF,KAAQA,EAAM4D,WAAcA,EAAY/C,WAlCpD,WACL,UAATb,GACDyD,EAAQ,QACRI,EAAc,SACdK,SAASC,KAAK1C,MAAMG,gBAAkB,OACtCQ,EAAU,6BAA8B,aAGxCqB,EAAQ,SACRI,EAAc,QACdK,SAASC,KAAK1C,MAAMG,gBAAkB,QACtCQ,EAAU,8BAA+B,aAuBkDgC,YApB3E,WAEN,SAATpE,GACDyD,EAAQ,SACRI,EAAc,QACdK,SAASC,KAAK1C,MAAMG,gBAAkB,QACtCQ,EAAU,8BAA+B,aAGzCqB,EAAQ,QACRI,EAAc,SACdK,SAASC,KAAK1C,MAAMG,gBAAkB,OACtCQ,EAAU,8BAA+B,YAE3CiC,QAAQC,IAAItE,MAOVN,EAAAC,EAAAC,cAAC2E,EAAK,CAAClB,MAAQA,EAAOjB,UAAaA,IACjC1C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAEfJ,EAAAC,EAAAC,cAACqB,EAAI,CAACU,QAAU,aAAc3B,KAAQA,EAAM4D,WAAcA,EAAYxB,UAAaA,OCnD5EoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWpB,SAASqB,eAAe,SACpDC,OACH9F,EAAAC,EAAAC,cAACF,EAAAC,EAAM8F,WAAU,KACf/F,EAAAC,EAAAC,cAAC8F,EAAG,QAORlB","file":"static/js/main.8b41884e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            Navbar {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link mx-2\" href=\"#\">\r\n                  About \r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item dropdown\">\r\n                <a\r\n                  className=\"nav-link dropdown-toggle mx-2\"\r\n                  href=\"#\"\r\n                  role=\"button\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  Dropdown\r\n                </a>\r\n                <ul className=\"dropdown-menu\">\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"/\">\r\n                      Action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"/\">\r\n                      Another action\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <hr className=\"dropdown-divider\" />\r\n                  </li>\r\n                  <li>\r\n                    <a className=\"dropdown-item\" href=\"#\">\r\n                      Something else here\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link disabled\" href=\"#\">Disabled</a>\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode === 'dark' ? 'light' : props.mode === 'green' ? 'primary' :props.mode === 'blue' ? 'success' : 'dark' }`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" aria-checked=\"false\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Switch Mode</label>\r\n            </div>\r\n            <div className={`form-check form-switch text-${props.mode === 'blue' ? 'green' : 'blue'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" aria-checked=\"false\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Switch Mode</label>\r\n            </div>\r\n            <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired, //make it required field\r\n};\r\n// used when values are not passed\r\nNavbar.defaultProps = {\r\n  title: \"default title\",\r\n  about: \"default about\",\r\n  num: \"{07}\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Form(props) {\r\n    const handleClickToUpperCase = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted To UpperCase\", \"success\");\r\n    };\r\n    const handleClickToLowerCase = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted To LowerCase\", \"success\");\r\n    };\r\n    const speak = () => {\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.speak(msg);\r\n      }\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    };\r\n    const handleCountWordLength = () => {\r\n        let count = 0;\r\n        let newText = text.split(\" \");\r\n        newText.forEach(element => {\r\n            if(element.length > 0){\r\n                count = count + 1;\r\n            }\r\n        });\r\n        return count;\r\n    };\r\n\r\n    const [text, setText] = useState(\"\"); // text = enter text here\r\n    //setText(\"enter here\");  // text = enter  here\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style ={{color:props.mode === 'light' ? 'grey': 'white'}}>\r\n            <h1 >{props.heading} </h1>\r\n\r\n            <div className=\"form-group\" style ={{backgroundColor:props.mode === 'light' ? 'white': 'grey'}}>\r\n                <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" style ={{backgroundColor:props.mode === 'light' ? 'white': 'grey',\r\n                color:props.mode === 'light' ? 'grey': 'white'}} onChange={handleOnChange}\r\n                    rows=\"2\"\r\n                ></textarea>\r\n            </div>\r\n            \r\n            <button className=\"btn btn-primary my-3\" onClick={handleClickToUpperCase}>\r\n                Convert to UpperCase\r\n            </button>\r\n            <button className=\"btn btn-primary my-3 mx-2\" onClick={handleClickToLowerCase}>\r\n                Convert to LowerCase\r\n            </button>\r\n            <button type=\"submit\" onClick={speak} className=\"btn btn-warning mx-2 my-2\">Speak</button>\r\n\r\n        </div>\r\n            \r\n        <div className=\"container my-2\" style ={{color:props.mode === 'light' ? 'grey': 'white'}}>\r\n\r\n            <h2>hey para</h2>\r\n            <p>{handleCountWordLength()} words , {text.length} char</p>            \r\n            <p>{text.split(\" \").length * 0.008} time to read</p>\r\n            <h2>Preview :</h2>\r\n            <p>{text}</p>\r\n            </div>\r\n            \r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const resetAlert = () =>{\r\n        setTimeout(() => {\r\n          props.showAlert();\r\n          \r\n        }, 2000);\r\n    } \r\n    return (\r\n        props.alert && <div><div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">            \r\n        <strong>{props.alert.type}</strong> : <strong>{props.alert.msg}</strong>        \r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\" onClick={resetAlert}></button>\r\n        </div></div>\r\n\r\n    )\r\n}\r\n\r\nexport default Alert","import \"./App.css\";\nimport React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Form from \"./components/Form\";\n//import About from \"./components/About\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\n\nfunction App() {\n  const[mode, setMode] = useState('light');\n  const[switchText, setswitchText] = useState('dark');\n  const [alert, setAlert] = useState(null);\n  \n  const showAlert = (message, type) =>{   \n    if(message == null){      \n      setAlert(null)\n    }\n    else{\n      setAlert({\n        msg : message,\n        type : type\n      })\n    }\n  } \n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      setswitchText('light');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    }   \n    else{\n      setMode('light')\n      setswitchText('dark')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Dark Mode has been disabled\", \"success\");\n    }\n  }\n  const toggleMode2 = ()=>{\n    \n    if(mode === 'blue'){\n      setMode('green');\n      setswitchText('blue');\n      document.body.style.backgroundColor = 'green';\n      showAlert(\"Green Mode has been enabled\", \"success\");\n    }   \n    else{\n      setMode('blue');\n      setswitchText('green');\n      document.body.style.backgroundColor = 'blue';\n      showAlert(\"Green Mode has been enabled\", \"success\");\n    }  \n    console.log(mode);   \n\n  }\n  return (\n    <>\n    \n      <Navbar title=\"value pass\" mode = {mode} switchText = {switchText} toggleMode={toggleMode} toggleMode2={toggleMode2}></Navbar>\n      <Alert alert ={alert} showAlert = {showAlert}></Alert>\n        <div className=\"container my-3\">\n        {/* <About /> */}\n        <Form heading = \"Enter text\"  mode = {mode} switchText = {switchText} showAlert = {showAlert} ></Form>\n            {/* <Route path=\"/about\">\n              \n            </Route>\n            <Route path=\"/\">\n             \n            </Route> */}\n            \n        </div>\n        </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}